PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 30)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 30)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 30
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
30
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 60
}
Output List {
0
1
2
30
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 30); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 30)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 30)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 30
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 30
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
30
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 60
}
Output List {
0
1
2
30
}

FileTable: 

Heap: 
{
1 -> 30
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 17
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 17
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
3 -> 20
}

----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 17
Execution Stack {
}

SymTable: 
{
a -> Address: 3, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
3 -> 20
}

================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

PRGState with id: 10
Execution Stack {
(Ref(Int) a; (new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
Ref(Int) a
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(new(a, 20); (for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a))))
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
new(a, 20)
}

SymTable: 
{
a -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
(for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); print(Read heap (a)))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
for(v=0; v<3; v=v PLUS 1) Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(Int v; (v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
Int v
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
(v = 0; while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)})
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = 0
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 0
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 1
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 20
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
Fork ( (print(v); v = v MULTIPLY Read heap (a)) )
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
v = v PLUS 1
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(print(v); v = v MULTIPLY Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
while (v LESS_THAN 3) {(Fork ( (print(v); v = v MULTIPLY Read heap (a)) ); v = v PLUS 1)}
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
print(v)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
print(Read heap (a))
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
v = v MULTIPLY Read heap (a)
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 2
}
Output List {
0
1
2
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 10
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 3
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
a -> Address: 1, RefValue(Int)
v -> 40
}
Output List {
0
1
2
20
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


================================================================

