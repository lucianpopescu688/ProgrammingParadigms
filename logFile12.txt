PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 16
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 2, RefValue(Int)
v2 -> Address: 3, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
2 -> 20
3 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
30
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 300
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
305
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
305
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
305
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 305
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(Ref(Int) v1; (Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))))
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
Ref(Int) v1
}

SymTable: 
{
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Ref(Int) v2; (Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
Ref(Int) v2
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int x; (Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))))
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
Int x
}

SymTable: 
{
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Int q; (new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))))
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
Int q
}

SymTable: 
{
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v1, 20); (new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
new(v1, 20)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 0, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(new(v2, 30); (newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
new(v2, 30)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 0, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(x); (Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))))
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
newLock(x)
}

SymTable: 
{
q -> 0
x -> 0
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) ); (newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
Fork ( (Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(newLock(q); (Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) ); (Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
newLock(q)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
Fork ( (lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))) )
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) ); (NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
(Write to heap (v1=Read heap (v1) MULTIPLY 10); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(lock(x); (Write to heap (v1=Read heap (v1) MINUS 1); unlock(x)))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
Fork ( (Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MULTIPLY 10)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
lock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 20
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
(Write to heap (v1=Read heap (v1) MINUS 1); unlock(x))
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) ); (lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 12
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


================================================================

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
Write to heap (v1=Read heap (v1) MINUS 1)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
Fork ( (lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))) )
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 200
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
unlock(x)
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(lock(q); (Write to heap (v2=Read heap (v2) PLUS 5); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> 13
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 13
Execution Stack {
}

SymTable: 
{
q -> 0
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


================================================================

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
(Write to heap (v2=Read heap (v2) PLUS 5); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) PLUS 5)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 30
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(NopStatement; (lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 15


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 15
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


================================================================

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
NopStatement
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
(Write to heap (v2=Read heap (v2) MULTIPLY 10); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(x); (print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
Write to heap (v2=Read heap (v2) MULTIPLY 10)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 35
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
lock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 14


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 14
Execution Stack {
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


================================================================

PRGState with id: 11
Execution Stack {
(print(Read heap (v1)); (unlock(x); (lock(q); (print(Read heap (v2)); unlock(q)))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
print(Read heap (v1))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(unlock(x); (lock(q); (print(Read heap (v2)); unlock(q))))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
unlock(x)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> 11
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(lock(q); (print(Read heap (v2)); unlock(q)))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
lock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> -1


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
(print(Read heap (v2)); unlock(q))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
print(Read heap (v2))
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

PRGState with id: 11
Execution Stack {
unlock(q)
}

SymTable: 
{
q -> 2
x -> 1
v1 -> Address: 1, RefValue(Int)
v2 -> Address: 2, RefValue(Int)
}
Output List {
199
350
}

FileTable: 

Heap: 
{
1 -> 199
2 -> 350
}
LockTable: 
1 -> -1
2 -> 11


----------------------------------------------------------------

